os: linux
dist: bionic
language: shell
services:
- docker
# Update Docker
addons:
  apt:
    update: true
    sources:
    - sourceline: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
      key_url: https://download.docker.com/linux/ubuntu/gpg
    packages:
    - containerd.io
    - docker-ce
    - docker-ce-cli
    - jq
    - qemu-user
# Flag experimental features
before_install:
- sudo mkdir -p /etc/docker
- echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json
# Update docker-compose
- sudo rm /usr/local/bin/docker-compose
- curl -L https://github.com/docker/compose/releases/download/1.26.0/docker-compose-`uname -s`-`uname -m` > docker-compose
- chmod +x docker-compose
- sudo mv docker-compose /usr/local/bin
# Add yq
- pip install yq
script:
- docker login -u "${DOCKER_USER}" -p "${DOCKER_PASSWORD}" &> /dev/null
- bash .build.sh
#- cd ${TRAVIS_BUILD_DIR}/${CONTAINER}
#- export DOCKERFILE_PATH=Dockerfile.${TAG}
#- export DOCKER_REPO=index.docker.io/${DOCKER_ORG}/${CONTAINER}
#- docker buildx create --name ${CONTAINER}
#- docker buildx use ${CONTAINER}
#- docker buildx inspect --bootstrap
#- if [[ -n "${LATEST}" && "${LATEST}" == "true" ]]; then docker buildx build --platform "linux/amd64" -t "${DOCKER_ORG}/${CONTAINER}:${TAG}" -t "${DOCKER_ORG}/${CONTAINER}:latest" -f "${DOCKERFILE_PATH}" --push . ; fi
#- if [[ -z "${LATEST}" || "${LATEST}" == "false" ]]; then docker buildx build --platform "linux/amd64" -t "${DOCKER_ORG}/${CONTAINER}:${TAG}" -f "${DOCKERFILE_PATH}" --push . ; fi
env:
  global:
  - DOCKER_CLI_EXPERIMENTAL=enabled
  - DOCKER_ORG=zadara

stages:
- base
- standard
jobs:
  include:
# Root containers
  - stage: base
    env: CONTAINER=base-s6

# Purpose containers
  - stage: standard
    env: CONTAINER=ssh LATEST="ubuntu"
  - stage: standard
    env: CONTAINER=fio-autofill LATEST="alpine"
  - stage: standard
    env: CONTAINER=iperf LATEST="3-alpine"
  - stage: standard
    env: CONTAINER=crond
